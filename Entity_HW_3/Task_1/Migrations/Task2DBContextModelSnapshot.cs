// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Task_2.Entity;

#nullable disable

namespace Task_1.Migrations
{
    [DbContext(typeof(Task2DBContext))]
    partial class Task2DBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FirstEntitySecondEntity", b =>
                {
                    b.Property<int>("FirstsID")
                        .HasColumnType("int");

                    b.Property<int>("SecondsID")
                        .HasColumnType("int");

                    b.HasKey("FirstsID", "SecondsID");

                    b.HasIndex("SecondsID");

                    b.ToTable("FirstEntitySecondEntity");
                });

            modelBuilder.Entity("FirstEntityThirdEntity", b =>
                {
                    b.Property<int>("FirstsID")
                        .HasColumnType("int");

                    b.Property<int>("ThirdsID")
                        .HasColumnType("int");

                    b.HasKey("FirstsID", "ThirdsID");

                    b.HasIndex("ThirdsID");

                    b.ToTable("FirstEntityThirdEntity");
                });

            modelBuilder.Entity("SecondEntityThirdEntity", b =>
                {
                    b.Property<int>("SecondsID")
                        .HasColumnType("int");

                    b.Property<int>("ThirdsID")
                        .HasColumnType("int");

                    b.HasKey("SecondsID", "ThirdsID");

                    b.HasIndex("ThirdsID");

                    b.ToTable("SecondEntityThirdEntity");
                });

            modelBuilder.Entity("Task_2.Entity.FirstEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.HasKey("ID");

                    b.ToTable("FirstEntities");
                });

            modelBuilder.Entity("Task_2.Entity.SecondEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.HasKey("ID");

                    b.ToTable("SecondEntities");
                });

            modelBuilder.Entity("Task_2.Entity.ThirdEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.HasKey("ID");

                    b.ToTable("ThirdEntities");
                });

            modelBuilder.Entity("FirstEntitySecondEntity", b =>
                {
                    b.HasOne("Task_2.Entity.FirstEntity", null)
                        .WithMany()
                        .HasForeignKey("FirstsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Task_2.Entity.SecondEntity", null)
                        .WithMany()
                        .HasForeignKey("SecondsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FirstEntityThirdEntity", b =>
                {
                    b.HasOne("Task_2.Entity.FirstEntity", null)
                        .WithMany()
                        .HasForeignKey("FirstsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Task_2.Entity.ThirdEntity", null)
                        .WithMany()
                        .HasForeignKey("ThirdsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SecondEntityThirdEntity", b =>
                {
                    b.HasOne("Task_2.Entity.SecondEntity", null)
                        .WithMany()
                        .HasForeignKey("SecondsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Task_2.Entity.ThirdEntity", null)
                        .WithMany()
                        .HasForeignKey("ThirdsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
